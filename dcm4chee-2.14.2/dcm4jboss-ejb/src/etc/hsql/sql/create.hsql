CREATE TABLE ae (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	aet          	VARCHAR(256) NOT NULL,
	hostname     	VARCHAR(256) NOT NULL,
	port			INTEGER NOT NULL,
	cipher_suites  	VARCHAR(256),
	pat_id_issuer	VARCHAR(256),
	user_id			VARCHAR(256),
	passwd			VARCHAR(256),
	fs_group_id		VARCHAR(256),
    ae_desc         VARCHAR(256),
    wado_url        VARCHAR(256)
);
CREATE UNIQUE INDEX aet ON ae(aet);

CREATE TABLE code (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	code_value     	VARCHAR(256) NOT NULL,
	code_designator	VARCHAR(256) NOT NULL,
	code_version   	VARCHAR(256),
	code_meaning   	VARCHAR(256)
);
CREATE UNIQUE INDEX code_value ON code(code_value,code_designator,code_version);

CREATE TABLE patient (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	merge_fk		BIGINT,
	pat_id         	VARCHAR(256),
	pat_id_issuer  	VARCHAR(256),
	pat_name    	VARCHAR(256),
	pat_i_name    	VARCHAR(256),
	pat_p_name    	VARCHAR(256),
	pat_birthdate  	VARCHAR(256),
	pat_sex		  	VARCHAR(256),
	pat_custom1		VARCHAR(256),
	pat_custom2		VARCHAR(256),
	pat_custom3		VARCHAR(256),
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	pat_attrs		VARBINARY,
FOREIGN KEY (merge_fk) REFERENCES patient(pk)
);
CREATE INDEX pat_merge_fk ON patient(merge_fk);
CREATE INDEX pat_id ON patient(pat_id, pat_id_issuer);
CREATE INDEX pat_name ON patient(pat_name);
CREATE INDEX pat_i_name ON patient(pat_i_name);
CREATE INDEX pat_p_name ON patient(pat_p_name);
CREATE INDEX pat_birthdate ON patient(pat_birthdate);
CREATE INDEX pat_sex ON patient(pat_sex);
CREATE INDEX pat_custom1 ON patient(pat_custom1);
CREATE INDEX pat_custom2 ON patient(pat_custom2);
CREATE INDEX pat_custom3 ON patient(pat_custom3);

CREATE TABLE other_pid (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	pat_id         	VARCHAR(256) NOT NULL,
	pat_id_issuer  	VARCHAR(256) NOT NULL
);
CREATE UNIQUE INDEX other_pat_id ON other_pid(pat_id, pat_id_issuer);

CREATE TABLE rel_pat_other_pid (
	patient_fk      BIGINT,
	other_pid_fk    BIGINT,
FOREIGN KEY (patient_fk) REFERENCES patient(pk),
FOREIGN KEY (other_pid_fk) REFERENCES other_pid(pk)
);
CREATE INDEX other_pid_pat_fk ON rel_pat_other_pid(patient_fk);
CREATE INDEX pat_other_pid_fk ON rel_pat_other_pid(other_pid_fk);

CREATE TABLE study (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	patient_fk      BIGINT,
	study_iuid      VARCHAR(256) NOT NULL,
	study_id        VARCHAR(256),
	study_datetime	TIMESTAMP,
	accession_no	VARCHAR(256),
	ref_physician  VARCHAR(256),
	ref_phys_i_name VARCHAR(256),
	ref_phys_p_name VARCHAR(256),
	study_desc      VARCHAR(256),
	study_custom1	VARCHAR(256),
	study_custom2	VARCHAR(256),
	study_custom3	VARCHAR(256),
	study_status_id VARCHAR(256),
	mods_in_study	VARCHAR(256),
    cuids_in_study  VARCHAR(256),
	num_series		INTEGER NOT NULL,
	num_instances	INTEGER NOT NULL,
	ext_retr_aet	VARCHAR(256),
	retrieve_aets	VARCHAR(256),
	fileset_iuid	VARCHAR(256),
	fileset_id		VARCHAR(256),
	availability	INTEGER NOT NULL,
	study_status	INTEGER NOT NULL,
	checked_time	TIMESTAMP,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	study_attrs		VARBINARY,
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);

CREATE INDEX patient_fk ON study(patient_fk);
CREATE UNIQUE INDEX study_iuid ON study(study_iuid);
CREATE INDEX study_id ON study(study_id);
CREATE INDEX study_datetime ON study(study_datetime);
CREATE INDEX accession_no ON study(accession_no);
CREATE INDEX ref_physician ON study(ref_physician);
CREATE INDEX ref_phys_i_name ON study(ref_phys_i_name);
CREATE INDEX ref_phys_p_name ON study(ref_phys_p_name);
CREATE INDEX study_desc ON study(study_desc);
CREATE INDEX study_custom1 ON study(study_custom1);
CREATE INDEX study_custom2 ON study(study_custom2);
CREATE INDEX study_custom3 ON study(study_custom3);
CREATE INDEX study_status_id ON study(study_status_id);
CREATE INDEX study_checked ON study(checked_time);
CREATE INDEX study_created ON study(created_time);
CREATE INDEX study_updated ON study(updated_time);
CREATE INDEX study_status ON study(study_status);

CREATE TABLE rel_study_pcode (
	study_fk       BIGINT,
	pcode_fk       BIGINT,
FOREIGN KEY (study_fk) REFERENCES study(pk),
FOREIGN KEY (pcode_fk) REFERENCES code(pk)
);
CREATE INDEX pcode_study_fk ON rel_study_pcode(study_fk);
CREATE INDEX study_pcode_fk ON rel_study_pcode(pcode_fk);

CREATE TABLE study_permission (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	study_iuid      VARCHAR(256) NOT NULL,
	action          VARCHAR(256) NOT NULL,
	roles           VARCHAR(256) NOT NULL
);
CREATE UNIQUE INDEX study_perm_idx ON study_permission(study_iuid, action, roles);

CREATE TABLE mpps (
	pk          		BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	patient_fk      	BIGINT,
	drcode_fk			BIGINT,
	mpps_iuid			VARCHAR(256) NOT NULL,
	pps_start			TIMESTAMP,
	station_aet			VARCHAR(256),
	modality	    	VARCHAR(256),
	accession_no		VARCHAR(256),
	mpps_status			INTEGER NOT NULL,
	created_time	    TIMESTAMP,
	updated_time	    TIMESTAMP,
	mpps_attrs			VARBINARY,
FOREIGN KEY (patient_fk) REFERENCES patient(pk),
FOREIGN KEY (drcode_fk) REFERENCES code(pk)
);
CREATE UNIQUE INDEX mpps_iuid ON mpps (mpps_iuid);
CREATE INDEX mpps_patient_fk ON mpps(patient_fk);
CREATE INDEX mpps_drcode_fk ON mpps(drcode_fk);
CREATE INDEX mpps_pps_start ON mpps (pps_start);
CREATE INDEX mpps_station_aet ON mpps (station_aet);
CREATE INDEX mpps_modality ON mpps (modality);
CREATE INDEX mpps_accession_no ON mpps (accession_no);	

CREATE TABLE series (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	study_fk		BIGINT,
	mpps_fk			BIGINT,
	series_iuid     VARCHAR(256) NOT NULL,
	series_no		VARCHAR(256),
	modality		VARCHAR(256),
	body_part		VARCHAR(256),
	laterality		VARCHAR(256),
	series_desc		VARCHAR(256),
	institution		VARCHAR(256),
	station_name    VARCHAR(256),
	department		VARCHAR(256),
	perf_physician  VARCHAR(256),
	perf_phys_i_name  VARCHAR(256),
	perf_phys_p_name  VARCHAR(256),
	pps_start		TIMESTAMP,
	pps_iuid		VARCHAR(256),
	series_custom1	VARCHAR(256),
	series_custom2	VARCHAR(256),
	series_custom3	VARCHAR(256),
	num_instances	INTEGER NOT NULL,
	src_aet			VARCHAR(256),
	ext_retr_aet	VARCHAR(256),
	retrieve_aets	VARCHAR(256),
	fileset_iuid	VARCHAR(256),
	fileset_id		VARCHAR(256),
	availability	INTEGER NOT NULL,
	series_status	INTEGER NOT NULL,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	series_attrs	VARBINARY,
FOREIGN KEY (study_fk) REFERENCES study(pk),
FOREIGN KEY (mpps_fk) REFERENCES mpps(pk)
);
CREATE INDEX study_fk ON series(study_fk);
CREATE INDEX series_mpps_fk ON series(mpps_fk);
CREATE UNIQUE INDEX series_iuid ON series(series_iuid);
CREATE INDEX series_no ON series(series_no);
CREATE INDEX modality ON series(modality);
CREATE INDEX body_part ON series(body_part);
CREATE INDEX laterality ON series(laterality);
CREATE INDEX series_desc ON series(series_desc);
CREATE INDEX institution ON series(institution);
CREATE INDEX station_name ON series(station_name);
CREATE INDEX department ON series(department);
CREATE INDEX perf_physician ON series(perf_physician);
CREATE INDEX perf_phys_i_name ON series(perf_phys_i_name);
CREATE INDEX perf_phys_p_name ON series(perf_phys_p_name);
CREATE INDEX series_pps_start ON series(pps_start);
CREATE INDEX series_pps_iuid ON series (pps_iuid);
CREATE INDEX series_custom1 ON series(series_custom1);
CREATE INDEX series_custom2 ON series(series_custom2);
CREATE INDEX series_custom3 ON series(series_custom3);
CREATE INDEX series_src_aet ON series (src_aet);
CREATE INDEX series_status ON series(series_status);
CREATE INDEX series_created ON series(created_time);
CREATE INDEX series_updated ON series(updated_time);

CREATE TABLE series_req (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	series_fk       BIGINT,
	study_iuid      VARCHAR(256),
	req_proc_id     VARCHAR(256),
	sps_id          VARCHAR(256),
	req_service		VARCHAR(256),
	req_physician   VARCHAR(256),
	req_phys_i_name VARCHAR(256),
	req_phys_p_name VARCHAR(256),
FOREIGN KEY (series_fk) REFERENCES series(pk)
);
CREATE INDEX ser_req_series_fk ON series_req(series_fk);
CREATE INDEX ser_rq_study_iuid ON series_req(study_iuid);
CREATE INDEX ser_req_proc_id ON series_req(req_proc_id);
CREATE INDEX ser_req_sps_id ON series_req(sps_id);	
CREATE INDEX ser_req_service ON series_req(req_service);
CREATE INDEX ser_req_phys ON series_req(req_physician);
CREATE INDEX ser_req_phys_i ON series_req(req_phys_i_name);
CREATE INDEX ser_req_phys_p ON series_req(req_phys_p_name);

CREATE TABLE media (
	pk          		BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	fileset_iuid		VARCHAR(256) NOT NULL,
	fileset_id			VARCHAR(256), 
	media_rq_iuid		VARCHAR(256),
	media_status		INTEGER NOT NULL,
	media_status_info	VARCHAR(256),
	media_usage			BIGINT NOT NULL,
	created_time		TIMESTAMP,
	updated_time		TIMESTAMP
);
CREATE UNIQUE INDEX fileset_iuid ON media(fileset_iuid);
CREATE INDEX media_status ON media(media_status);

CREATE TABLE instance (
	pk             		BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	series_fk			BIGINT,
	srcode_fk			BIGINT,
	media_fk			BIGINT,
	sop_iuid			VARCHAR(256) NOT NULL,
	sop_cuid			VARCHAR(256) NOT NULL,
	inst_no				VARCHAR(256),
	content_datetime	TIMESTAMP,
	sr_complete			VARCHAR(256),
	sr_verified			VARCHAR(256),
	inst_custom1		VARCHAR(256),
	inst_custom2		VARCHAR(256),
	inst_custom3		VARCHAR(256),
	ext_retr_aet		VARCHAR(256),
	retrieve_aets		VARCHAR(256),
	availability		INTEGER NOT NULL,
	inst_status			INTEGER NOT NULL,
	all_attrs			BIT NOT NULL,
	commitment			BIT NOT NULL,
	created_time	    TIMESTAMP,
	updated_time	    TIMESTAMP,
	inst_attrs			VARBINARY,
FOREIGN KEY (series_fk) REFERENCES series(pk),
FOREIGN KEY (srcode_fk) REFERENCES code(pk),
FOREIGN KEY (media_fk)	REFERENCES media(pk)
);
CREATE INDEX series_fk ON instance(series_fk);
CREATE INDEX srcode_fk ON instance(srcode_fk);
CREATE INDEX media_fk ON instance(media_fk);
CREATE UNIQUE INDEX sop_iuid ON instance(sop_iuid);
CREATE INDEX sop_cuid ON instance(sop_cuid);
CREATE INDEX inst_no ON instance(inst_no);
CREATE INDEX content_datetime ON instance(content_datetime);
CREATE INDEX sr_complete ON instance(sr_complete);
CREATE INDEX sr_verified ON instance(sr_verified);
CREATE INDEX inst_custom1 ON instance(inst_custom1);
CREATE INDEX inst_custom2 ON instance(inst_custom2);
CREATE INDEX inst_custom3 ON instance(inst_custom3);
CREATE INDEX ext_retr_aet ON instance(ext_retr_aet);
CREATE INDEX inst_status ON instance(inst_status);
CREATE INDEX commitment ON instance(commitment);

CREATE TABLE verify_observer (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	instance_fk     BIGINT,
	verify_datetime TIMESTAMP,
	observer_name   VARCHAR(256),
	observer_i_name VARCHAR(256),
	observer_p_name VARCHAR(256),
FOREIGN KEY (instance_fk) REFERENCES instance(pk)
);
CREATE INDEX observer_inst_fk ON verify_observer(instance_fk);
CREATE INDEX verify_datetime ON verify_observer(verify_datetime);
CREATE INDEX observer_name ON verify_observer(observer_name);
CREATE INDEX observer_i_name ON verify_observer(observer_i_name);
CREATE INDEX observer_p_name ON verify_observer(observer_p_name);

CREATE TABLE filesystem (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	next_fk         BIGINT,
	dirpath			VARCHAR(256) NOT NULL,
	fs_group_id		VARCHAR(256) NOT NULL,
	retrieve_aet	VARCHAR(256) NOT NULL,
	availability	INTEGER NOT NULL,
	fs_status		INTEGER NOT NULL,
	user_info		VARCHAR(256),
FOREIGN KEY (next_fk) REFERENCES filesystem(pk)
);
CREATE UNIQUE INDEX fs_dirpath ON filesystem(dirpath);
CREATE INDEX fs_next_fk ON filesystem(next_fk);
CREATE INDEX fs_group_id ON filesystem(fs_group_id);
CREATE INDEX fs_retrieve_aet ON filesystem(retrieve_aet);
CREATE INDEX fs_availability ON filesystem(availability);
CREATE INDEX fs_status ON filesystem(fs_status);

CREATE TABLE files (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	instance_fk     BIGINT,
	filesystem_fk   BIGINT,
	filepath		VARCHAR(256) NOT NULL,
	file_tsuid      VARCHAR(256) NOT NULL,
	file_md5        VARCHAR(256),
	file_size       BIGINT,
	file_status     INTEGER,
	md5_check_time	TIMESTAMP,
	created_time	TIMESTAMP,
FOREIGN KEY (instance_fk)	REFERENCES instance(pk),
FOREIGN KEY (filesystem_fk)	REFERENCES filesystem(pk)
);
CREATE INDEX instance_fk ON files(instance_fk);
CREATE INDEX filesystem_fk ON files(filesystem_fk);
CREATE INDEX file_tsuid ON files(file_tsuid);
CREATE INDEX md5_check_time ON files(md5_check_time);
CREATE INDEX file_created ON files(created_time);
CREATE INDEX file_status ON files(file_status);

CREATE TABLE study_on_fs (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	study_fk		BIGINT,
	filesystem_fk	BIGINT,
	access_time		TIMESTAMP NOT NULL,
FOREIGN KEY (study_fk) REFERENCES study(pk),
FOREIGN KEY (filesystem_fk) REFERENCES filesystem(pk)
);
CREATE UNIQUE INDEX i_study_on_fs ON study_on_fs(study_fk, filesystem_fk);
CREATE INDEX fs_of_study ON study_on_fs(filesystem_fk);
CREATE INDEX access_time ON study_on_fs(access_time);

CREATE TABLE mwl_item (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	patient_fk      BIGINT,
	sps_status      INTEGER,
	sps_id			VARCHAR(256),
	start_datetime	TIMESTAMP NOT NULL,
	station_aet     VARCHAR(256) NOT NULL,
	station_name    VARCHAR(256),
	modality	    VARCHAR(256) NOT NULL,
	perf_physician  VARCHAR(256),
	perf_phys_i_name  VARCHAR(256),
	perf_phys_p_name  VARCHAR(256),
	req_proc_id    	VARCHAR(256) NOT NULL,
	accession_no	VARCHAR(256),
	study_iuid      VARCHAR(256) NOT NULL,
	created_time	TIMESTAMP,
	updated_time	TIMESTAMP,
	item_attrs		VARBINARY,
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE INDEX mwl_patient_fk ON mwl_item(patient_fk);
CREATE INDEX sps_status ON mwl_item(sps_status);
CREATE UNIQUE INDEX mwl_sps_id ON mwl_item(sps_id,req_proc_id);
CREATE INDEX mwl_start_time ON mwl_item(start_datetime);
CREATE INDEX mwl_station_aet ON mwl_item(station_aet);
CREATE INDEX mwl_station_name ON mwl_item(station_name);
CREATE INDEX mwl_modality ON mwl_item(modality);
CREATE INDEX mwl_perf_physician ON mwl_item(perf_physician);
CREATE INDEX mwl_perf_phys_i_nm ON mwl_item(perf_phys_i_name);
CREATE INDEX mwl_perf_phys_p_nm ON mwl_item(perf_phys_p_name);
CREATE INDEX mwl_req_proc_id ON mwl_item(req_proc_id);
CREATE INDEX mwl_accession_no ON mwl_item(accession_no);
CREATE INDEX mwl_study_iuid ON mwl_item(study_iuid);

CREATE TABLE gpsps (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	patient_fk      BIGINT,
	code_fk         BIGINT,
	gpsps_iuid      VARCHAR(256) NOT NULL,
	gpsps_tuid      VARCHAR(256),
	start_datetime  TIMESTAMP NOT NULL,
	end_datetime    TIMESTAMP,
	gpsps_status    INTEGER,
	gpsps_prior     INTEGER,
	in_availability INTEGER,
	item_attrs      VARBINARY,
FOREIGN KEY (patient_fk) REFERENCES patient(pk),
FOREIGN KEY (code_fk) REFERENCES code(pk)
);
CREATE INDEX gpsps_patient_fk ON gpsps(patient_fk);
CREATE INDEX gpsps_code_fk ON gpsps(code_fk);
CREATE UNIQUE INDEX gpsps_iuid ON gpsps(gpsps_iuid);
CREATE INDEX gpsps_tuid ON gpsps(gpsps_tuid);
CREATE INDEX gpsps_start_time ON gpsps(start_datetime);
CREATE INDEX gpsps_end_time ON gpsps(end_datetime);
CREATE INDEX gpsps_status ON gpsps(gpsps_status);
CREATE INDEX gpsps_prior ON gpsps(gpsps_prior);
CREATE INDEX in_availability ON gpsps(in_availability);

CREATE TABLE rel_gpsps_appcode (
	gpsps_fk       BIGINT,
	appcode_fk     BIGINT,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (appcode_fk) REFERENCES code(pk)
);
CREATE INDEX appcode_gpsps_fk ON rel_gpsps_appcode(gpsps_fk);
CREATE INDEX gpsps_appcode_fk ON rel_gpsps_appcode(appcode_fk);

CREATE TABLE rel_gpsps_devname (
	gpsps_fk       BIGINT,
	devname_fk     BIGINT,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (devname_fk) REFERENCES code(pk)
);
CREATE INDEX devname_gpsps_fk ON rel_gpsps_devname(gpsps_fk);
CREATE INDEX gpsps_devname_fk ON rel_gpsps_devname(devname_fk);

CREATE TABLE rel_gpsps_devclass (
	gpsps_fk       BIGINT,
	devclass_fk    BIGINT,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (devclass_fk) REFERENCES code(pk)
);
CREATE INDEX devclass_gpsps_fk ON rel_gpsps_devclass(gpsps_fk);
CREATE INDEX gpsps_devclass_fk ON rel_gpsps_devclass(devclass_fk);

CREATE TABLE rel_gpsps_devloc (
	gpsps_fk       BIGINT,
	devloc_fk  BIGINT,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (devloc_fk) REFERENCES code(pk)
);
CREATE INDEX devloc_gpsps_fk ON rel_gpsps_devloc(gpsps_fk);
CREATE INDEX gpsps_devloc_fk ON rel_gpsps_devloc(devloc_fk);

CREATE TABLE gpsps_perf (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	gpsps_fk        BIGINT,
	code_fk         BIGINT,
	human_perf_name VARCHAR(256),
	hum_perf_i_name VARCHAR(256),
	hum_perf_p_name VARCHAR(256),
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (code_fk) REFERENCES code(pk)
);
CREATE INDEX gpsps_perf_sps_fk ON gpsps_perf(gpsps_fk);
CREATE INDEX gpsps_perf_code_fk ON gpsps_perf(code_fk);
CREATE INDEX gpsps_perf_name ON gpsps_perf(human_perf_name);
CREATE INDEX gpsps_perf_i_name ON gpsps_perf(hum_perf_i_name);
CREATE INDEX gpsps_perf_p_name ON gpsps_perf(hum_perf_p_name);

CREATE TABLE gpsps_req (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	gpsps_fk        BIGINT,
	req_proc_id		VARCHAR(256),
	accession_no	VARCHAR(256),
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk)
);
CREATE INDEX gpsps_req_gpsps_fk ON gpsps_req(gpsps_fk);
CREATE INDEX gpsps_req_proc_id ON gpsps_req(req_proc_id);
CREATE INDEX gpsps_req_acc_no ON gpsps_req(accession_no);	

CREATE TABLE gppps (
	pk          		BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	patient_fk			BIGINT,
	pps_iuid			VARCHAR(256) NOT NULL,
	pps_start			TIMESTAMP,
	pps_status			INTEGER NOT NULL,
	created_time	    TIMESTAMP,
	updated_time	    TIMESTAMP,
	pps_attrs			VARBINARY,
FOREIGN KEY (patient_fk) REFERENCES patient(pk)
);
CREATE UNIQUE INDEX gppps_iuid ON gppps (pps_iuid);
CREATE INDEX gppps_patient_fk ON gppps(patient_fk);
CREATE INDEX gppps_pps_start ON gppps (pps_start);

CREATE TABLE rel_gpsps_gppps (
	gpsps_fk        BIGINT,
	gppps_fk        BIGINT,
FOREIGN KEY (gpsps_fk) REFERENCES gpsps(pk),
FOREIGN KEY (gppps_fk) REFERENCES gppps(pk)
);
CREATE INDEX gppps_gpsps_fk ON rel_gpsps_gppps(gpsps_fk);
CREATE INDEX gpsps_gppps_fk ON rel_gpsps_gppps(gppps_fk);

CREATE TABLE hp (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_fk         BIGINT,
	hp_iuid         VARCHAR(256) NOT NULL,
	hp_cuid         VARCHAR(256),
	hp_name         VARCHAR(256),
	hp_group        VARCHAR(256),
	hp_level        INTEGER,
	num_priors      INTEGER,
	num_screens     INTEGER,
	hp_attrs        VARBINARY,
FOREIGN KEY (user_fk) REFERENCES code(pk)
);
CREATE INDEX hp_user_fk ON hp(user_fk);
CREATE UNIQUE INDEX hp_iuid ON hp(hp_iuid);
CREATE INDEX hp_cuid ON hp(hp_cuid);
CREATE INDEX hp_name ON hp(hp_name);
CREATE INDEX hp_level ON hp(hp_level);
CREATE INDEX num_screens ON hp(num_screens);

CREATE TABLE hpdef (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	hp_fk           BIGINT,
	modality        VARCHAR(256),
	laterality      VARCHAR(256),
FOREIGN KEY (hp_fk) REFERENCES hp(pk)
);
CREATE INDEX hp_fk ON hpdef(hp_fk);
CREATE INDEX hpdef_modality ON hpdef(modality);
CREATE INDEX hpdef_laterality ON hpdef(laterality);

CREATE TABLE rel_hpdef_region (
	hpdef_fk        BIGINT,
	region_fk       BIGINT,
FOREIGN KEY (hpdef_fk) REFERENCES hpdef(pk),
FOREIGN KEY (region_fk) REFERENCES code(pk)
);
CREATE INDEX region_hpdef_fk ON rel_hpdef_region(hpdef_fk);
CREATE INDEX hpdef_region_fk ON rel_hpdef_region(region_fk);

CREATE TABLE rel_hpdef_proc (
	hpdef_fk        BIGINT,
	proc_fk       BIGINT,
FOREIGN KEY (hpdef_fk) REFERENCES hpdef(pk),
FOREIGN KEY (proc_fk) REFERENCES code(pk)
);
CREATE INDEX proc_hpdef_fk ON rel_hpdef_proc(hpdef_fk);
CREATE INDEX hpdef_proc_fk ON rel_hpdef_proc(proc_fk);

CREATE TABLE rel_hpdef_reason (
	hpdef_fk        BIGINT,
	reason_fk       BIGINT,
FOREIGN KEY (hpdef_fk) REFERENCES hpdef(pk),
FOREIGN KEY (reason_fk) REFERENCES code(pk)
);
CREATE INDEX reason_hpdef_fk ON rel_hpdef_reason(hpdef_fk);
CREATE INDEX hpdef_reason_fk ON rel_hpdef_reason(reason_fk);

CREATE TABLE priv_patient (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	priv_type		INTEGER NOT NULL,
	pat_id         	VARCHAR(256),
	pat_id_issuer  	VARCHAR(256),
	pat_name  		VARCHAR(256),
	pat_attrs		VARBINARY
);
CREATE INDEX priv_pat_id ON priv_patient(pat_id, pat_id_issuer);
CREATE INDEX priv_pat_type ON priv_patient(priv_type);
CREATE INDEX priv_patient_name ON priv_patient(pat_name);

CREATE TABLE priv_study (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	patient_fk      BIGINT,
	priv_type		INTEGER NOT NULL,
	study_iuid      VARCHAR(256) NOT NULL,
	accession_no	VARCHAR(256),
	study_attrs		VARBINARY,
FOREIGN KEY (patient_fk) REFERENCES priv_patient(pk)
);
CREATE INDEX priv_patient_fk ON priv_study(patient_fk);
CREATE INDEX priv_study_type ON priv_study(priv_type);
CREATE INDEX priv_study_iuid ON priv_study(study_iuid);
CREATE INDEX priv_study_accs_no ON priv_study(accession_no);

CREATE TABLE priv_series (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	study_fk		BIGINT,
	priv_type		INTEGER NOT NULL,
	series_iuid     VARCHAR(256) NOT NULL,
	src_aet			VARCHAR(256),
	series_attrs	VARBINARY,
FOREIGN KEY (study_fk) REFERENCES priv_study(pk)
);
CREATE INDEX priv_study_fk ON priv_series(study_fk);
CREATE INDEX priv_series_type ON priv_series(priv_type);
CREATE INDEX priv_series_iuid ON priv_series(series_iuid);
CREATE INDEX priv_ser_src_aet ON priv_series(src_aet);


CREATE TABLE priv_instance (
	pk             	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	series_fk		BIGINT,
	priv_type		INTEGER NOT NULL,
	sop_iuid		VARCHAR(256) NOT NULL,
	inst_attrs		VARBINARY,
FOREIGN KEY (series_fk) REFERENCES priv_series(pk)
);
CREATE INDEX priv_series_fk ON priv_instance(series_fk);
CREATE INDEX priv_inst_type ON priv_instance(priv_type);
CREATE INDEX priv_sop_iuid ON priv_instance(sop_iuid);

CREATE TABLE priv_file (
	pk              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	instance_fk     BIGINT,
	filesystem_fk   BIGINT,
	filepath		VARCHAR(256) NOT NULL,
	file_tsuid      VARCHAR(256) NOT NULL,
	file_md5        VARCHAR(256),
	file_size       BIGINT,
	file_status     INTEGER,
FOREIGN KEY (instance_fk)	REFERENCES priv_instance(pk),
FOREIGN KEY (filesystem_fk)	REFERENCES filesystem(pk)
);
CREATE INDEX priv_instance_fk ON priv_file(instance_fk);
CREATE INDEX priv_fs_fk ON priv_file(filesystem_fk);


CREATE TABLE device (
	pk          	BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	station_name    VARCHAR(256) NOT NULL,
	station_aet     VARCHAR(256) NOT NULL,
	modality		VARCHAR(256) NOT NULL
);
CREATE UNIQUE INDEX dev_station_name ON device(station_name);

CREATE TABLE rel_dev_proto (
	device_fk      BIGINT,
	prcode_fk      BIGINT,
FOREIGN KEY (device_fk) REFERENCES device(pk),
FOREIGN KEY (prcode_fk) REFERENCES code(pk)
);
CREATE INDEX device_fk ON rel_dev_proto(device_fk);
CREATE INDEX prcode_fk ON rel_dev_proto(prcode_fk);

CREATE TABLE users(
	user_id		VARCHAR(256) PRIMARY KEY,
	passwd 		VARCHAR(256)
);
CREATE TABLE roles(
	user_id		VARCHAR(256),
	roles	 	VARCHAR(256),
FOREIGN KEY (user_id) REFERENCES users(user_id)
);
CREATE INDEX user_id ON roles(user_id);

INSERT INTO users VALUES('admin','0DPiKuNIrrVmD8IUCuw1hQxNqZc=');
INSERT INTO roles VALUES('admin','JBossAdmin');
INSERT INTO roles VALUES('admin','WebAdmin');
INSERT INTO roles VALUES('admin','WebUser');
INSERT INTO roles VALUES('admin','McmUser');
INSERT INTO roles VALUES('admin','AuditLogUser');
INSERT INTO roles VALUES('admin','Doctor');

INSERT INTO users VALUES('user','Et6pb+wgWTVmq3VpLJlJWWgzrck=');
INSERT INTO roles VALUES('user','WebUser');
INSERT INTO roles VALUES('user','McmUser');
INSERT INTO roles VALUES('user','Doctor');

INSERT INTO ae (aet,hostname,port,pat_id_issuer,ae_desc)
	VALUES('DCM4CHEE','localhost',11112,'DCM4CHEE','This dcm4chee archive instance');
INSERT INTO ae (aet,hostname,port,ae_desc)
	VALUES('CDRECORD','localhost',10104,'Media Creation Server (part of dcm4chee)');
